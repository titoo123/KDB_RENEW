#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KDB_RENEW
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Kran")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertBereich(Bereich instance);
    partial void UpdateBereich(Bereich instance);
    partial void DeleteBereich(Bereich instance);
    partial void InsertKran(Kran instance);
    partial void UpdateKran(Kran instance);
    partial void DeleteKran(Kran instance);
    partial void InsertTeil(Teil instance);
    partial void UpdateTeil(Teil instance);
    partial void DeleteTeil(Teil instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["KranConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bereich> Bereich
		{
			get
			{
				return this.GetTable<Bereich>();
			}
		}
		
		public System.Data.Linq.Table<Kran> Kran
		{
			get
			{
				return this.GetTable<Kran>();
			}
		}
		
		public System.Data.Linq.Table<Teil> Teil
		{
			get
			{
				return this.GetTable<Teil>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bereich")]
	public partial class Bereich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _Id_Kran;
		
		private EntitySet<Teil> _Teil;
		
		private EntityRef<Kran> _Kran;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnId_KranChanging(int value);
    partial void OnId_KranChanged();
    #endregion
		
		public Bereich()
		{
			this._Teil = new EntitySet<Teil>(new Action<Teil>(this.attach_Teil), new Action<Teil>(this.detach_Teil));
			this._Kran = default(EntityRef<Kran>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Kran", DbType="Int NOT NULL")]
		public int Id_Kran
		{
			get
			{
				return this._Id_Kran;
			}
			set
			{
				if ((this._Id_Kran != value))
				{
					if (this._Kran.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_KranChanging(value);
					this.SendPropertyChanging();
					this._Id_Kran = value;
					this.SendPropertyChanged("Id_Kran");
					this.OnId_KranChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bereich_Teil", Storage="_Teil", ThisKey="Id", OtherKey="Id_Bereich")]
		public EntitySet<Teil> Teil
		{
			get
			{
				return this._Teil;
			}
			set
			{
				this._Teil.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kran_Bereich", Storage="_Kran", ThisKey="Id_Kran", OtherKey="Id", IsForeignKey=true)]
		public Kran Kran
		{
			get
			{
				return this._Kran.Entity;
			}
			set
			{
				Kran previousValue = this._Kran.Entity;
				if (((previousValue != value) 
							|| (this._Kran.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kran.Entity = null;
						previousValue.Bereich.Remove(this);
					}
					this._Kran.Entity = value;
					if ((value != null))
					{
						value.Bereich.Add(this);
						this._Id_Kran = value.Id;
					}
					else
					{
						this._Id_Kran = default(int);
					}
					this.SendPropertyChanged("Kran");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teil(Teil entity)
		{
			this.SendPropertyChanging();
			entity.Bereich = this;
		}
		
		private void detach_Teil(Teil entity)
		{
			this.SendPropertyChanging();
			entity.Bereich = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kran")]
	public partial class Kran : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private EntitySet<Bereich> _Bereich;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public Kran()
		{
			this._Bereich = new EntitySet<Bereich>(new Action<Bereich>(this.attach_Bereich), new Action<Bereich>(this.detach_Bereich));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kran_Bereich", Storage="_Bereich", ThisKey="Id", OtherKey="Id_Kran")]
		public EntitySet<Bereich> Bereich
		{
			get
			{
				return this._Bereich;
			}
			set
			{
				this._Bereich.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bereich(Bereich entity)
		{
			this.SendPropertyChanging();
			entity.Kran = this;
		}
		
		private void detach_Bereich(Bereich entity)
		{
			this.SendPropertyChanging();
			entity.Kran = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teil")]
	public partial class Teil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Zeichnungsnummer;
		
		private string _Artikelnummer;
		
		private string _Bermerkungen;
		
		private int _Id_Bereich;
		
		private System.Nullable<int> _Id_Teil;
		
		private EntityRef<Bereich> _Bereich;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnZeichnungsnummerChanging(string value);
    partial void OnZeichnungsnummerChanged();
    partial void OnArtikelnummerChanging(string value);
    partial void OnArtikelnummerChanged();
    partial void OnBermerkungenChanging(string value);
    partial void OnBermerkungenChanged();
    partial void OnId_BereichChanging(int value);
    partial void OnId_BereichChanged();
    partial void OnId_TeilChanging(System.Nullable<int> value);
    partial void OnId_TeilChanged();
    #endregion
		
		public Teil()
		{
			this._Bereich = default(EntityRef<Bereich>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zeichnungsnummer", DbType="VarChar(50)")]
		public string Zeichnungsnummer
		{
			get
			{
				return this._Zeichnungsnummer;
			}
			set
			{
				if ((this._Zeichnungsnummer != value))
				{
					this.OnZeichnungsnummerChanging(value);
					this.SendPropertyChanging();
					this._Zeichnungsnummer = value;
					this.SendPropertyChanged("Zeichnungsnummer");
					this.OnZeichnungsnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artikelnummer", DbType="VarChar(50)")]
		public string Artikelnummer
		{
			get
			{
				return this._Artikelnummer;
			}
			set
			{
				if ((this._Artikelnummer != value))
				{
					this.OnArtikelnummerChanging(value);
					this.SendPropertyChanging();
					this._Artikelnummer = value;
					this.SendPropertyChanged("Artikelnummer");
					this.OnArtikelnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bermerkungen", DbType="VarChar(MAX)")]
		public string Bermerkungen
		{
			get
			{
				return this._Bermerkungen;
			}
			set
			{
				if ((this._Bermerkungen != value))
				{
					this.OnBermerkungenChanging(value);
					this.SendPropertyChanging();
					this._Bermerkungen = value;
					this.SendPropertyChanged("Bermerkungen");
					this.OnBermerkungenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Bereich", DbType="Int NOT NULL")]
		public int Id_Bereich
		{
			get
			{
				return this._Id_Bereich;
			}
			set
			{
				if ((this._Id_Bereich != value))
				{
					if (this._Bereich.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_BereichChanging(value);
					this.SendPropertyChanging();
					this._Id_Bereich = value;
					this.SendPropertyChanged("Id_Bereich");
					this.OnId_BereichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Teil", DbType="Int")]
		public System.Nullable<int> Id_Teil
		{
			get
			{
				return this._Id_Teil;
			}
			set
			{
				if ((this._Id_Teil != value))
				{
					this.OnId_TeilChanging(value);
					this.SendPropertyChanging();
					this._Id_Teil = value;
					this.SendPropertyChanged("Id_Teil");
					this.OnId_TeilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bereich_Teil", Storage="_Bereich", ThisKey="Id_Bereich", OtherKey="Id", IsForeignKey=true)]
		public Bereich Bereich
		{
			get
			{
				return this._Bereich.Entity;
			}
			set
			{
				Bereich previousValue = this._Bereich.Entity;
				if (((previousValue != value) 
							|| (this._Bereich.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bereich.Entity = null;
						previousValue.Teil.Remove(this);
					}
					this._Bereich.Entity = value;
					if ((value != null))
					{
						value.Teil.Add(this);
						this._Id_Bereich = value.Id;
					}
					else
					{
						this._Id_Bereich = default(int);
					}
					this.SendPropertyChanged("Bereich");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Rechte;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRechteChanging(string value);
    partial void OnRechteChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rechte", DbType="VarChar(10)")]
		public string Rechte
		{
			get
			{
				return this._Rechte;
			}
			set
			{
				if ((this._Rechte != value))
				{
					this.OnRechteChanging(value);
					this.SendPropertyChanging();
					this._Rechte = value;
					this.SendPropertyChanged("Rechte");
					this.OnRechteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
